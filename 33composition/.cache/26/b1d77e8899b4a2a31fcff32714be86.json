{"id":"script.js","dependencies":[{"name":"/Users/marshall/code/Marshall-Hao/diveintojs/33composition/package.json","includedInParent":true,"mtime":1630343500726},{"name":"lodash","loc":{"line":1,"column":24},"parent":"/Users/marshall/code/Marshall-Hao/diveintojs/33composition/script.js","resolved":"/Users/marshall/code/Marshall-Hao/diveintojs/33composition/node_modules/lodash/lodash.js"},{"name":"lodash/fp","loc":{"line":2,"column":30},"parent":"/Users/marshall/code/Marshall-Hao/diveintojs/33composition/script.js","resolved":"/Users/marshall/code/Marshall-Hao/diveintojs/33composition/node_modules/lodash/fp.js"}],"generated":{"js":"\"use strict\";\n\nvar _lodash = require(\"lodash\");\n\nvar _fp = require(\"lodash/fp\");\n\nvar array = [1, 2, 3, 4, 5];\n\nvar double = function double(element) {\n  return element * 2;\n};\n\nvar addOne = function addOne(element) {\n  return element + 1;\n}; // const doubleAndAddOne = (element) => {\n//   return addOne(double(element));\n// };\n// const doubleAndAddOne = compose(addOne, double);\n\n\nvar doubleAndAddOne = (0, _fp.flow)(double, addOne);\nconsole.log(array.map(doubleAndAddOne));\nconsole.log((0, _lodash.groupBy)(array, function (element) {\n  return element % 2;\n}));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"script.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"script.js","original":{"line":4,"column":0}},{"name":"array","generated":{"line":7,"column":4},"source":"script.js","original":{"line":4,"column":6}},{"generated":{"line":7,"column":9},"source":"script.js","original":{"line":4,"column":11}},{"generated":{"line":7,"column":12},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":13},"source":"script.js","original":{"line":4,"column":15}},{"generated":{"line":7,"column":14},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":16},"source":"script.js","original":{"line":4,"column":18}},{"generated":{"line":7,"column":17},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":19},"source":"script.js","original":{"line":4,"column":21}},{"generated":{"line":7,"column":20},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":22},"source":"script.js","original":{"line":4,"column":24}},{"generated":{"line":7,"column":23},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":25},"source":"script.js","original":{"line":4,"column":27}},{"generated":{"line":7,"column":26},"source":"script.js","original":{"line":4,"column":14}},{"generated":{"line":7,"column":27},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"script.js","original":{"line":6,"column":0}},{"name":"double","generated":{"line":9,"column":4},"source":"script.js","original":{"line":6,"column":6}},{"generated":{"line":9,"column":10},"source":"script.js","original":{"line":6,"column":12}},{"generated":{"line":9,"column":13},"source":"script.js","original":{"line":6,"column":15}},{"name":"double","generated":{"line":9,"column":22},"source":"script.js","original":{"line":6,"column":6}},{"generated":{"line":9,"column":28},"source":"script.js","original":{"line":6,"column":15}},{"name":"element","generated":{"line":9,"column":29},"source":"script.js","original":{"line":6,"column":16}},{"generated":{"line":9,"column":36},"source":"script.js","original":{"line":6,"column":15}},{"generated":{"line":9,"column":38},"source":"script.js","original":{"line":6,"column":28}},{"generated":{"line":10,"column":0},"source":"script.js","original":{"line":7,"column":2}},{"name":"element","generated":{"line":10,"column":9},"source":"script.js","original":{"line":7,"column":9}},{"generated":{"line":10,"column":16},"source":"script.js","original":{"line":7,"column":16}},{"generated":{"line":10,"column":19},"source":"script.js","original":{"line":7,"column":19}},{"generated":{"line":10,"column":20},"source":"script.js","original":{"line":7,"column":2}},{"generated":{"line":11,"column":0},"source":"script.js","original":{"line":8,"column":1}},{"generated":{"line":11,"column":1},"source":"script.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"script.js","original":{"line":10,"column":0}},{"name":"addOne","generated":{"line":13,"column":4},"source":"script.js","original":{"line":10,"column":6}},{"generated":{"line":13,"column":10},"source":"script.js","original":{"line":10,"column":12}},{"generated":{"line":13,"column":13},"source":"script.js","original":{"line":10,"column":15}},{"name":"addOne","generated":{"line":13,"column":22},"source":"script.js","original":{"line":10,"column":6}},{"generated":{"line":13,"column":28},"source":"script.js","original":{"line":10,"column":15}},{"name":"element","generated":{"line":13,"column":29},"source":"script.js","original":{"line":10,"column":16}},{"generated":{"line":13,"column":36},"source":"script.js","original":{"line":10,"column":15}},{"generated":{"line":13,"column":38},"source":"script.js","original":{"line":10,"column":28}},{"generated":{"line":14,"column":0},"source":"script.js","original":{"line":11,"column":2}},{"name":"element","generated":{"line":14,"column":9},"source":"script.js","original":{"line":11,"column":9}},{"generated":{"line":14,"column":16},"source":"script.js","original":{"line":11,"column":16}},{"generated":{"line":14,"column":19},"source":"script.js","original":{"line":11,"column":19}},{"generated":{"line":14,"column":20},"source":"script.js","original":{"line":11,"column":2}},{"generated":{"line":15,"column":0},"source":"script.js","original":{"line":12,"column":1}},{"generated":{"line":15,"column":1},"source":"script.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":3},"source":"script.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"script.js","original":{"line":15,"column":0}},{"generated":{"line":17,"column":0},"source":"script.js","original":{"line":16,"column":0}},{"generated":{"line":18,"column":0},"source":"script.js","original":{"line":18,"column":0}},{"generated":{"line":21,"column":0},"source":"script.js","original":{"line":19,"column":0}},{"name":"doubleAndAddOne","generated":{"line":21,"column":4},"source":"script.js","original":{"line":19,"column":6}},{"generated":{"line":21,"column":19},"source":"script.js","original":{"line":19,"column":21}},{"generated":{"line":21,"column":22},"source":"script.js","original":{"line":19,"column":24}},{"name":"double","generated":{"line":21,"column":36},"source":"script.js","original":{"line":19,"column":29}},{"generated":{"line":21,"column":42},"source":"script.js","original":{"line":19,"column":24}},{"name":"addOne","generated":{"line":21,"column":44},"source":"script.js","original":{"line":19,"column":37}},{"generated":{"line":21,"column":50},"source":"script.js","original":{"line":19,"column":24}},{"generated":{"line":21,"column":51},"source":"script.js","original":{"line":19,"column":0}},{"name":"console","generated":{"line":22,"column":0},"source":"script.js","original":{"line":20,"column":0}},{"generated":{"line":22,"column":7},"source":"script.js","original":{"line":20,"column":7}},{"name":"log","generated":{"line":22,"column":8},"source":"script.js","original":{"line":20,"column":8}},{"generated":{"line":22,"column":11},"source":"script.js","original":{"line":20,"column":0}},{"name":"array","generated":{"line":22,"column":12},"source":"script.js","original":{"line":20,"column":12}},{"generated":{"line":22,"column":17},"source":"script.js","original":{"line":20,"column":17}},{"name":"map","generated":{"line":22,"column":18},"source":"script.js","original":{"line":20,"column":18}},{"generated":{"line":22,"column":21},"source":"script.js","original":{"line":20,"column":12}},{"name":"doubleAndAddOne","generated":{"line":22,"column":22},"source":"script.js","original":{"line":20,"column":22}},{"generated":{"line":22,"column":37},"source":"script.js","original":{"line":20,"column":12}},{"generated":{"line":22,"column":38},"source":"script.js","original":{"line":20,"column":0}},{"name":"console","generated":{"line":23,"column":0},"source":"script.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":7},"source":"script.js","original":{"line":21,"column":7}},{"name":"log","generated":{"line":23,"column":8},"source":"script.js","original":{"line":21,"column":8}},{"generated":{"line":23,"column":11},"source":"script.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":12},"source":"script.js","original":{"line":21,"column":12}},{"name":"array","generated":{"line":23,"column":33},"source":"script.js","original":{"line":21,"column":20}},{"generated":{"line":23,"column":38},"source":"script.js","original":{"line":21,"column":12}},{"generated":{"line":23,"column":40},"source":"script.js","original":{"line":21,"column":27}},{"name":"element","generated":{"line":23,"column":50},"source":"script.js","original":{"line":21,"column":28}},{"generated":{"line":23,"column":57},"source":"script.js","original":{"line":21,"column":27}},{"generated":{"line":24,"column":0},"source":"script.js","original":{"line":21,"column":27}},{"name":"element","generated":{"line":24,"column":9},"source":"script.js","original":{"line":21,"column":40}},{"generated":{"line":24,"column":16},"source":"script.js","original":{"line":21,"column":47}},{"generated":{"line":24,"column":19},"source":"script.js","original":{"line":21,"column":50}},{"generated":{"line":24,"column":20},"source":"script.js","original":{"line":21,"column":27}},{"generated":{"line":25,"column":0},"source":"script.js","original":{"line":21,"column":27}},{"generated":{"line":25,"column":1},"source":"script.js","original":{"line":21,"column":12}},{"generated":{"line":25,"column":2},"source":"script.js","original":{"line":21,"column":0}}],"sources":{"script.js":"import { groupBy } from \"lodash\";\nimport { compose, flow } from \"lodash/fp\";\n\nconst array = [1, 2, 3, 4, 5];\n\nconst double = (element) => {\n  return element * 2;\n};\n\nconst addOne = (element) => {\n  return element + 1;\n};\n\n// const doubleAndAddOne = (element) => {\n//   return addOne(double(element));\n// };\n\n// const doubleAndAddOne = compose(addOne, double);\nconst doubleAndAddOne = flow(double, addOne);\nconsole.log(array.map(doubleAndAddOne));\nconsole.log(groupBy(array, (element) => element % 2));\n"},"lineCount":null}},"error":null,"hash":"11a66b94744fecb0784af26653041d4d","cacheData":{"env":{}}}